{"version":3,"sources":["pictures/movie.png","pictures/blogmy.png","pictures/weather.png","pictures/todo.png","components/Navbar.js","components/About.js","components/Work.js","components/WorkComponent.js","components/Contact.js","components/Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","className","to","About","Work","props","src","img","text","WorkComponent","Movie","onClick","event","window","location","href","MyBlog","Weather","ToDo","name","Component","Contact","Home","App","exact","path","component","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"0FAAAA,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,kC,+NCG5B,SAASC,IACpB,OACI,yBAAKC,UAAU,eACX,4BACI,4BAAI,kBAAC,IAAD,CAAMC,GAAG,KAAT,SACJ,4BAAI,kBAAC,IAAD,CAAMA,GAAG,UAAT,UACJ,4BAAI,kBAAC,IAAD,CAAMA,GAAG,SAAT,SACJ,4BAAI,kBAAC,IAAD,CAAMA,GAAG,YAAT,cCRL,SAASC,IACpB,OACC,yBAAKF,UAAU,gBACf,yBAAKA,UAAU,YACX,sCACA,kFACA,6BACA,gHACD,qFACC,6BACA,sGACA,4BACA,6BACA,kFACA,6BACA,wHCfM,SAASG,EAAKC,GACzB,OACI,6BACA,yBAAKJ,UAAU,WACX,yBAAKK,IAAKD,EAAME,MAChB,2BAAIF,EAAMG,Q,wECADC,E,iLAIb,OACQ,yBAAKR,UAAU,gBACvB,yBAAKA,UAAU,aACf,yBAAKA,UAAU,gBACf,kBAACG,EAAD,CAAMG,IAAKG,IAAOF,KAAK,2IACvB,4BAAQG,QAAU,SAAAC,GAAK,OAAIC,OAAOC,SAASC,KAAK,+CAAhD,wBAEA,yBAAKd,UAAU,gBACf,kBAACG,EAAD,CAAMG,IAAKS,IAAQR,KAAK,0HACxB,4BAAQG,QAAS,SAAAC,GAAK,OAAIC,OAAOC,SAASC,KAAK,qDAA/C,YAGA,yBAAKd,UAAU,aACf,yBAAKA,UAAU,gBACf,kBAACG,EAAD,CAAMG,IAAKU,MACX,4BAAQN,QAAS,SAAAC,GAAK,OAAIC,OAAOC,SAASC,KAAK,+CAA/C,gBAEA,yBAAKd,UAAU,gBACf,kBAACG,EAAD,CAAMG,IAAKW,MACX,4BAAQP,QAAS,SAAAC,GAAK,OAAIC,OAAOC,SAASC,KAAK,yCAA/C,gBAIA,yBAAKd,UAAU,eACf,yCACA,uBAAGU,QAAU,SAAAC,GAAK,OAAIC,OAAOC,SAASC,KAAK,gCACpC,8BAAUd,UAAU,OAAOkB,KAAK,uB,GA9BJC,aCL5B,SAASC,IACpB,OACI,yBAAKpB,UAAU,kBACf,yBAAKA,UAAU,cAEX,0CACA,gCACI,yBAAKA,UAAU,aACf,uBAAGU,QAAU,SAAAC,GAAK,OAAIC,OAAOC,SAASC,KAAK,gCAC5C,8BAAUd,UAAU,OAAOkB,KAAK,iBAEhC,uBAAGR,QAAU,SAAAC,GAAK,OAAIC,OAAOC,SAASC,KAAK,mDAC3C,8BAAUd,UAAU,OAAOkB,KAAK,uBCZhC,SAASG,IACpB,OACI,yBAAKrB,UAAU,eACf,yBAAKA,UAAU,YACX,gDACA,0CACA,kGACA,8B,ICESsB,E,iLAIjB,OAEE,6BACA,kBAAC,IAAD,KACE,kBAACvB,EAAD,MACA,kBAAC,IAAD,KAEA,kBAAC,IAAD,CAAOwB,OAAK,EAACC,KAAK,IAAIC,UAAWJ,IACjC,kBAAC,IAAD,CAAOG,KAAK,SAASC,UAAWvB,IAChC,kBAAC,IAAD,CAAOsB,KAAK,WAAWC,UAAWL,IAClC,kBAAC,IAAD,CAAOI,KAAK,QAAQC,UAAWjB,W,GAdNW,aCCbO,QACW,cAA7Bd,OAAOC,SAASc,UAEe,UAA7Bf,OAAOC,SAASc,UAEhBf,OAAOC,SAASc,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.7c354ad1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/movie.ddb7dbea.png\";","module.exports = __webpack_public_path__ + \"static/media/blogmy.d184cfe9.png\";","module.exports = __webpack_public_path__ + \"static/media/weather.492ea2b7.png\";","module.exports = __webpack_public_path__ + \"static/media/todo.1f8460fd.png\";","import React from 'react'\nimport {Link} from 'react-router-dom'\n\nexport default function Navbar() {\n    return (\n        <div className='navBarWhole'>\n            <ul>\n                <li><Link to=\"/\">Home</Link></li>\n                <li><Link to=\"/About\">About</Link></li>\n                <li><Link to=\"/Work\">Work</Link></li>\n                <li><Link to=\"/Contact\">Contact</Link></li>\n            </ul>\n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function About() {\n    return (\n     <div className=\"aboutWrapper\">\n     <div className=\"aboutDiv\">\n         <h1>maarja</h1>\n         <p>Originally from Estonia, currently in Manchester GB</p>\n         <br></br>\n         <p>Software developer - started my coding jorney with Code Nation in 2019 September.</p>\n        <p>Currently I am an apprentice developer for MusicMagpie</p>\n         <br></br>\n         <p>Hairdressing - I used to be a high-end hairdresser for almost a decade.</p>\n         <p></p>\n         <br></br>\n         <p>Gym - I love to work out. It is a lifestyle for me.</p>\n         <br></br>\n         <p>Hiking - Being outdoors gives me a lot of energy. And UK has some awesome hiking scenes</p>\n     </div>\n     </div>\n    )\n}\n","import React from 'react'\n\nexport default function Work(props) {\n    return (\n        <div>\n        <div className=\"workAll\">\n            <img src={props.img}></img>\n            <p>{props.text}</p>\n            {/* <button>{props.address}</button> */}\n        </div>\n        </div>\n    )\n}\n","import React, { Component } from 'react'\nimport Work from './Work'\nimport Movie from '../pictures/movie.png'\nimport MyBlog from '../pictures/blogmy.png'\nimport Weather from '../pictures/weather.png'\nimport ToDo from '../pictures/todo.png'\n\nexport default class WorkComponent extends Component {\n\n    render() {\n\n        return (\n                <div className=\"workAppjsAll\">\n        <div className=\"workAppjs\">\n        <div className=\"workAppjsOne\">\n        <Work img={Movie} text=\"A page where you can search info about movies or people who work in the industry. Created by using Node.js express, handlebars and CSS\"/>\n        <button onClick={ event => window.location.href='https://movie-search-search.herokuapp.com/'}>Movie/Person Search</button>\n        </div>\n        <div className=\"workAppjsOne\">\n        <Work img={MyBlog} text=\"A blog page built from scrach using Node.js express, handlebars, MongoDB for the database,  Bulma for the front end. \"/>\n        <button onClick={event => window.location.href='https://node-express-mongodb-blog.herokuapp.com/'}>MYBlog</button>\n        </div>\n        </div>\n        <div className=\"workAppjs\">\n        <div className=\"workAppjsOne\">\n        <Work img={Weather} />\n        <button onClick={event => window.location.href='https://new-weather-app-app.herokuapp.com/'}>Weather app</button>\n        </div>\n        <div className=\"workAppjsOne\">\n        <Work img={ToDo} />\n        <button onClick={event => window.location.href='https://jessika8.github.io/ToDoList/'}>To-Do List</button>\n        </div>\n        </div>\n        \n        <div className=\"workCompGit\">\n        <h2>My GitHub</h2>\n        <a onClick={ event => window.location.href='https://github.com/jessika8'}>\n               <ion-icon className=\"icon\" name=\"logo-github\"></ion-icon>\n               </a>\n               </div>\n        </div>\n        )\n    }\n}\n","import React from 'react'\n\nexport default function Contact() {\n    return (\n        <div className=\"contactWrapper\">\n        <div className=\"contactDiv\">\n\n            <h1>Contact me</h1>\n            <footer>\n                <div className=\"footerDiv\">\n                <a onClick={ event => window.location.href='https://github.com/jessika8'}>\n               <ion-icon className=\"icon\" name=\"logo-github\"></ion-icon>\n               </a>\n               <a onClick={ event => window.location.href='https://linkedin.com/in/maarja-roots-56898319a'}>\n               <ion-icon className=\"icon\" name=\"logo-linkedin\"></ion-icon>\n               </a>\n               </div>\n           </footer>\n        </div>\n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function Home() {\n    return (\n        <div className=\"homeWrapper\">\n        <div className=\"homeText\">\n            <h2>Nice to meet you</h2>\n            <h1>I'm maarja</h1>\n            <p>software developer, ex-hairdresser, gym enthusiast, hiker, estonian</p>\n            <p></p>\n        </div>\n        </div>\n    )\n}\n","\nimport './App.css';\nimport React, { Component } from 'react'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport Navbar from './components/Navbar'\nimport About from './components/About'\nimport WorkComponent from './components/WorkComponent'\nimport Contact from './components/Contact'\nimport Home from './components/Home'\n\n\nexport default class App extends Component {\n\n  render() {\n\n    return (\n\n      <div>\n      <BrowserRouter>\n        <Navbar />\n        <Switch>\n        {/* <About /> */}\n        <Route exact path='/' component={Home} />\n        <Route path='/About' component={About} />\n        <Route path='/Contact' component={Contact} />\n        <Route path='/Work' component={WorkComponent} />\n        </Switch>\n        </BrowserRouter>\n      </div>\n    )\n  }\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}