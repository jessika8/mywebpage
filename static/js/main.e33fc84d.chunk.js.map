{"version":3,"sources":["pictures/movie.png","pictures/blogmy.png","pictures/weather.png","pictures/todo.png","components/Navbar.js","components/About.js","components/Work.js","components/WorkComponent.js","components/Contact.js","components/Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","className","to","About","data","name","estonia","cn","developer","hairdressing","gym","hiking","Work","props","src","img","text","WorkComponent","Movie","movie","onClick","event","window","open","MyBlog","blog","Weather","weatherApp","ToDo","toDo","Component","Contact","Home","Hello","NameOne","Who","App","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e33fc84d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/movie.ddb7dbea.png\";","module.exports = __webpack_public_path__ + \"static/media/blogmy.d184cfe9.png\";","module.exports = __webpack_public_path__ + \"static/media/weather.492ea2b7.png\";","module.exports = __webpack_public_path__ + \"static/media/todo.1f8460fd.png\";","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport default function Navbar() {\r\n    return (\r\n        <div className='navBarWhole'>\r\n            <ul>\r\n                <li><Link to=\"/mywebpage\">Home</Link></li>\r\n                <li><Link to=\"/About\">About</Link></li>\r\n                <li><Link to=\"/Work\">Work</Link></li>\r\n                <li><Link to=\"/Contact\">Contact</Link></li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport data from \"../data.json\";\r\n\r\nexport default function About() {\r\n  return (\r\n    <div className=\"aboutWrapper\">\r\n      <div className=\"aboutDiv\">\r\n        <h1>{data.About[0].name}</h1>\r\n        <p>{data.About[0].estonia}</p>\r\n        <br></br>\r\n        <p>{data.About[0].cn}</p>\r\n        <p>{data.About[0].developer}</p>\r\n        <br></br>\r\n        <p>{data.About[0].hairdressing}</p>\r\n        <p></p>\r\n        <br></br>\r\n        <p>{data.About[0].gym}</p>\r\n        <br></br>\r\n        <p>{data.About[0].hiking}</p>\r\n        <br></br>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Work(props) {\r\n    return (\r\n        <div>\r\n        <div className=\"workAll\">\r\n            <img src={props.img}></img>\r\n            <p>{props.text}</p>\r\n            {/* <button>{props.address}</button> */}\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport Work from './Work'\r\nimport Movie from '../pictures/movie.png'\r\nimport MyBlog from '../pictures/blogmy.png'\r\nimport Weather from '../pictures/weather.png'\r\nimport ToDo from '../pictures/todo.png'\r\nimport data from '../data.json'\r\n\r\n \r\n\r\nexport default class WorkComponent extends Component {\r\n\r\n    render() {\r\n\r\n        return (\r\n                <div className=\"workAppjsAll\">\r\n        <div className=\"workAppjs\">\r\n        <div className=\"workAppjsOne\">\r\n        {/* window.location.href= */}\r\n        <Work img={Movie} text={data.Work[0].movie}/>\r\n        <button onClick={ event => window.open('https://movie-search-search.herokuapp.com/', \"_blank\")}>Movie/Person Search</button>\r\n        </div>\r\n        <div className=\"workAppjsOne\">\r\n        <Work img={MyBlog} text={data.Work[0].blog}/>\r\n        <button onClick={event => window.open('https://node-express-mongodb-blog.herokuapp.com/', \"_blank\")}>MYBlog</button>\r\n        </div>\r\n        </div>\r\n        <div className=\"workAppjs\">\r\n        <div className=\"workAppjsOne\">\r\n        <Work img={Weather} text={data.Work[0].weatherApp}/>\r\n        <button onClick={event => window.open('https://new-weather-app-app.herokuapp.com/', \"_blank\")}>Weather app</button>\r\n        </div>\r\n        <div className=\"workAppjsOne\">\r\n        <Work img={ToDo} text={data.Work[0].toDo}/>\r\n        <button onClick={event => window.open('https://jessika8.github.io/ToDoList/', \"_blank\")}>To-Do List</button>\r\n        </div>\r\n        </div>\r\n        \r\n        <div className=\"workCompGit\">\r\n        <h2>My GitHub</h2>\r\n        <a onClick={ event => window.open('https://github.com/jessika8', \"_blank\")}>\r\n               <ion-icon className=\"icon\" name=\"logo-github\"></ion-icon>\r\n               </a>\r\n               </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Contact() {\r\n    return (\r\n        <div className=\"contactWrapper\">\r\n        <div className=\"contactDiv\">\r\n\r\n            <h1>Contact me</h1>\r\n            <footer>\r\n                <div className=\"footerDiv\">\r\n                <a onClick={ event => window.open('https://github.com/jessika8', \"_blank\")}>\r\n               <ion-icon className=\"icon\" name=\"logo-github\"></ion-icon>\r\n               </a>\r\n               <a onClick={ event => window.open('https://linkedin.com/in/maarja-roots-56898319a', \"_blank\")}>\r\n               <ion-icon className=\"icon\" name=\"logo-linkedin\"></ion-icon>\r\n               </a>\r\n               </div>\r\n           </footer>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport data from '../data.json'\r\n\r\nexport default function Home() {\r\n    return (\r\n        <div className=\"homeWrapper\">\r\n        <div className=\"homeText\">\r\n            <h2>{data.Hello}</h2>\r\n            <h1>{data.NameOne}</h1>\r\n             <p>{data.Who}</p>\r\n            <p></p>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n","\r\nimport './App.css';\r\nimport React, { Component } from 'react'\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\r\nimport Navbar from './components/Navbar'\r\nimport About from './components/About'\r\nimport WorkComponent from './components/WorkComponent'\r\nimport Contact from './components/Contact'\r\nimport Home from './components/Home'\r\n\r\n\r\nexport default class App extends Component {\r\n\r\n  render() {\r\n\r\n    return (\r\n\r\n      <div>\r\n      <BrowserRouter>\r\n        <Navbar />\r\n        <Switch>\r\n        {/* <About /> */}\r\n        <Route exact path='/mywebpage' component={Home} />\r\n        <Route path='/About' component={About} />\r\n        <Route path='/Contact' component={Contact} />\r\n        <Route path='/Work' component={WorkComponent} />\r\n        </Switch>\r\n        </BrowserRouter>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}